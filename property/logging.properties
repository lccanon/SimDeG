# Properties file which configures the operation of the JDK
# logging facility.

# The system will look for this config file, first using
# a System property specified at startup:
#
# >java -Djava.util.logging.config.file=logging.properties
#

# Global logging properties.
# ------------------------------------------
# The set of handlers to be loaded upon startup.
handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# Loggers and Handlers may override this level
.level=ALL

# Loggers
# ------------------------------------------
# Here, the level for each package is specified.
# The global level is used by default, so levels
# specified here simply act as an override.

# For each package (com, simulation, scheduling), the general rule is:
# SEVERE: Error related informations
# INFO: initialization and termination
# CONFIG: result of configuration parameters
# FINE: continous notifications
# FINER: more computing demanding notifications
# FINEST: obfuscating logs

simdeg.util.level=INFO
simdeg.reputation.level=INFO
simdeg.scheduling.level=INFO
simdeg.simulation.level=CONFIG
simdeg.reputation.simulation.level=CONFIG

# Handlers
# -----------------------------------------

# --- ConsoleHandler ---
# Override of global logging level
java.util.logging.ConsoleHandler.level=WARNING
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# --- FileHandler ---
# Override of global logging level
java.util.logging.FileHandler.level=ALL

# Naming style for the output file:
# (The output file is placed in the directory
# defined by the "user.home" System property.)
java.util.logging.FileHandler.pattern=simdeg%g.log

# Limiting size of output file in bytes: (1GB)
java.util.logging.FileHandler.limit=1000000000

# Number of output files to cycle through, by appending an
# integer to the base file name:
# Experimental compaign should not include more than 100,000 simulations
java.util.logging.FileHandler.count=100000

# Style of output (Simple or XML):
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
